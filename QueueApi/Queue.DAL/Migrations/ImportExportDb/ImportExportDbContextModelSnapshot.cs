// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Queue.DAL.Context;

#nullable disable

namespace Queue.DAL.Migrations.ImportExportDb
{
    [DbContext(typeof(ImportExportDbContext))]
    partial class ImportExportDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Queue.DTO.Models.GroupSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GroupNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GroupSchedules");
                });

            modelBuilder.Entity("Queue.DTO.Models.SchedulePeriod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time");

                    b.Property<int?>("GroupScheduleId")
                        .HasColumnType("int");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("GroupScheduleId");

                    b.ToTable("SchedulePeriods");
                });

            modelBuilder.Entity("Queue.DTO.Models.SchedulePeriod", b =>
                {
                    b.HasOne("Queue.DTO.Models.GroupSchedule", null)
                        .WithMany("Periods")
                        .HasForeignKey("GroupScheduleId");
                });

            modelBuilder.Entity("Queue.DTO.Models.GroupSchedule", b =>
                {
                    b.Navigation("Periods");
                });
#pragma warning restore 612, 618
        }
    }
}
